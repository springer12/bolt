// Mail.bolt - Inbox and Outbox Rules.
//
// These rules support putting Messages in an Inbox (for another user)
// and making a record of all email sent in an outbox.
//
// Design goals:
//
// - Anyone can send a message to anybody by posting in the users inbox, as long as they have
//   the correct from field.
// - Cannot forge the from field of a message.
// - Cannot alter a message once created (it can only be deleted in-toto).
//
// Functionally similar rules to the corresponding rules defined in the Blaze Compiler:
// https://github.com/firebase/blaze_compiler/blob/master/examples/mail_example.yaml

type ImmutableString extends String {
  validate() = isNew(this);
}

type Message {
  from: ImmutableString,
  to: ImmutableString,
  message: ImmutableString,

  validate() {
    return isCurrentUser(this.from);
  }
}

// Inbox
path /users/$userid/inbox/$msg is Message {
  read() = isCurrentUser($userid);
  write() = isNew(this) || isCurrentUser($userid);
}

// Outbox
path /users/$userid/outbox/$msg is Message {
  read() = isCurrentUser($userid);
  write() = isCurrentUser($userid);
}

function isNew(ref) {
  return prior(ref) == null;
}

function isCurrentUser(userid) {
  return currentUser() == userid;
}

function currentUser() {
  // TODO: Use auth.uid - so not require customer token.
  return auth.username;
}
